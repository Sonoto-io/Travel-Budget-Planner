// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @db.Uuid @id @default(uuid())
  label  String?
  token String?

  expenses  Expense[]
}

model Currency {
  id    String      @id
  name String       
  label String      @unique
  conversion Float  @default(1.00)

  expenses  Expense[]
  countries Country[]
}

model Country {
  id        String  @id @db.Uuid @default(uuid())
  label     String? @unique
  daily_expected_expenses Float  @default(0.00)
  count_days Int
  main_currency String
  shortname String

  currency Currency @relation(fields: [main_currency], references: [id])

  expenses   Expense[]
}

model Category {
  id        String  @id @db.Uuid @default(uuid())
  label     String  @unique

  expenses  Expense[]
  subcategories Subcategory[]
}

model Subcategory {
  id        String  @id @db.Uuid @default(uuid())
  label     String  @unique
  categoryId String @db.Uuid

  category  Category  @relation(fields: [categoryId], references: [id])
  expenses  Expense[]
}

model Expense {
  id    String          @id @db.Uuid @default(uuid())
  countryId   String    @db.Uuid
  userId      String    @db.Uuid
  categoryId  String    @db.Uuid
  subcategoryId String  @db.Uuid
  currencyId  String    

  country     Country   @relation(fields: [countryId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
  subcategory Subcategory @relation(fields: [subcategoryId], references: [id])
  currency    Currency  @relation(fields: [currencyId], references: [id])

  note  String?
  price Float     @default(0.00)
  date  DateTime  @default(now())
  location String?
}