docker-build:
  image: docker:cli
  stage: build
  services:
    - docker:dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$CI_REGISTRY_IMAGE:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
  parallel:
    matrix:
      - DOCKER_IMAGE_NAME:
          [
            $CI_REGISTRY_IMAGE-frontend:$CI_COMMIT_REF_SLUG,
            $CI_REGISTRY_IMAGE-backend:$CI_COMMIT_REF_SLUG,
          ]

unit-tests:
  stage: test
  script:
    - cd $APP && make tests
  parallel:
    matrix:
      - APP: [frontend, backend]

lint:
  stage: test
  script:
    - cd $APP && make lint
  parallel:
    matrix:
      - APP: [frontend, backend]

deploy-frontend:
  stage: deploy

deploy-backend:
  stage: deploy
